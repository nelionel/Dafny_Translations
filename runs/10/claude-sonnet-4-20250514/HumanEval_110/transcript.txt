======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======

def exchange(lst1, lst2):
    """In this problem, you will implement a function that takes two lists of numbers,
    and determines whether it is possible to perform an exchange of elements
    between them to make lst1 a list of only even numbers.
    There is no limit on the number of exchanged elements between lst1 and lst2.
    If it is possible to exchange elements between the lst1 and lst2 to make
    all the elements of lst1 to be even, return "YES".
    Otherwise, return "NO".
    For example:
    exchange([1, 2, 3, 4], [1, 2, 3, 4]) => "YES"
    exchange([1, 2, 3, 4], [1, 5, 3, 4]) => "NO"
    It is assumed that the input lists will be non-empty.
    """


======MODEL OUTPUT======
Looking at this problem, I need to determine if I can exchange elements between two lists to make the first list contain only even numbers.

Let me think through the logic:
1. I need `lst1` to have only even numbers after exchanges
2. I can exchange any number of elements between the lists
3. The total number of elements in each list remains the same

The key insight is that I need to check if there are enough even numbers across both lists to fill `lst1` completely.

Here's my approach:
1. Count the total number of even numbers in both lists combined
2. If this count is greater than or equal to the length of `lst1`, then it's possible to make `lst1` all even numbers
3. Otherwise, it's impossible

```python
def exchange(lst1, lst2):
    """In this problem, you will implement a function that takes two lists of numbers,
    and determines whether it is possible to perform an exchange of elements
    between them to make lst1 a list of only even numbers.
    There is no limit on the number of exchanged elements between lst1 and lst2.
    If it is possible to exchange elements between the lst1 and lst2 to make
    all the elements of lst1 to be even, return "YES".
    Otherwise, return "NO".
    For example:
    exchange([1, 2, 3, 4], [1, 2, 3, 4]) => "YES"
    exchange([1, 2, 3, 4], [1, 5, 3, 4]) => "NO"
    It is assumed that the input lists will be non-empty.
    """
    # Count total even numbers in both lists
    total_even = 0
    
    # Count even numbers in lst1
    for num in lst1:
        if num % 2 == 0:
            total_even += 1
    
    # Count even numbers in lst2
    for num in lst2:
        if num % 2 == 0:
            total_even += 1
    
    # If we have enough even numbers to fill lst1, return "YES"
    if total_even >= len(lst1):
        return "YES"
    else:
        return "NO"
```

The solution works as follows:
- For `exchange([1, 2, 3, 4], [1, 2, 3, 4])`: There are 4 even numbers total (2, 4, 2, 4) and `lst1` has length 4, so we can make `lst1` all even → "YES"
- For `exchange([1, 2, 3, 4], [1, 5, 3, 4])`: There are 3 even numbers total (2, 4, 4) but `lst1` has length 4, so we cannot make `lst1` all even → "NO"