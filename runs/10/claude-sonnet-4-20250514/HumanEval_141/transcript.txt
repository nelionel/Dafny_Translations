======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======

def file_name_check(file_name):
    """Create a function which takes a string representing a file's name, and returns
    'Yes' if the the file's name is valid, and returns 'No' otherwise.
    A file's name is considered to be valid if and only if all the following conditions 
    are met:
    - There should not be more than three digits ('0'-'9') in the file's name.
    - The file's name contains exactly one dot '.'
    - The substring before the dot should not be empty, and it starts with a letter from 
    the latin alphapet ('a'-'z' and 'A'-'Z').
    - The substring after the dot should be one of these: ['txt', 'exe', 'dll']
    Examples:
    file_name_check("example.txt") # => 'Yes'
    file_name_check("1example.dll") # => 'No' (the name should start with a latin alphapet letter)
    """


======MODEL OUTPUT======
Looking at this problem, I need to check several conditions for a valid file name:

1. No more than 3 digits in the entire filename
2. Exactly one dot '.'
3. The part before the dot must not be empty and start with a letter (a-z or A-Z)
4. The part after the dot must be one of: 'txt', 'exe', 'dll'

Let me implement this step by step:

```python
def file_name_check(file_name):
    """Create a function which takes a string representing a file's name, and returns
    'Yes' if the the file's name is valid, and returns 'No' otherwise.
    A file's name is considered to be valid if and only if all the following conditions 
    are met:
    - There should not be more than three digits ('0'-'9') in the file's name.
    - The file's name contains exactly one dot '.'
    - The substring before the dot should not be empty, and it starts with a letter from 
    the latin alphapet ('a'-'z' and 'A'-'Z').
    - The substring after the dot should be one of these: ['txt', 'exe', 'dll']
    Examples:
    file_name_check("example.txt") # => 'Yes'
    file_name_check("1example.dll") # => 'No' (the name should start with a latin alphapet letter)
    """
    
    # Check if there's exactly one dot
    if file_name.count('.') != 1:
        return 'No'
    
    # Split the filename by the dot
    parts = file_name.split('.')
    name_part = parts[0]
    extension_part = parts[1]
    
    # Check if the name part is not empty
    if len(name_part) == 0:
        return 'No'
    
    # Check if the name part starts with a letter
    if not name_part[0].isalpha():
        return 'No'
    
    # Check if the extension is valid
    valid_extensions = ['txt', 'exe', 'dll']
    if extension_part not in valid_extensions:
        return 'No'
    
    # Count digits in the entire filename
    digit_count = sum(1 for char in file_name if char.isdigit())
    if digit_count > 3:
        return 'No'
    
    # If all conditions are met
    return 'Yes'
```

The function works by:

1. First checking if there's exactly one dot using `count('.')`
2. Splitting the filename into name and extension parts
3. Verifying the name part is not empty and starts with a letter using `isalpha()`
4. Checking if the extension is in the allowed list
5. Counting total digits in the filename and ensuring it's â‰¤ 3
6. Returning 'Yes' if all conditions pass, 'No' otherwise