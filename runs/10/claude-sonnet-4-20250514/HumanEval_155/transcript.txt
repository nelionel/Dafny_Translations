======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======

def even_odd_count(num):
    """Given an integer. return a tuple that has the number of even and odd digits respectively.

     Example:
        even_odd_count(-12) ==> (1, 1)
        even_odd_count(123) ==> (1, 2)
    """


======MODEL OUTPUT======
Looking at this problem, I need to:

1. Handle negative numbers by taking the absolute value
2. Count even digits (0, 2, 4, 6, 8) and odd digits (1, 3, 5, 7, 9)
3. Return a tuple with (even_count, odd_count)

```python
def even_odd_count(num):
    """Given an integer. return a tuple that has the number of even and odd digits respectively.

     Example:
        even_odd_count(-12) ==> (1, 1)
        even_odd_count(123) ==> (1, 2)
    """
    # Convert to absolute value to handle negative numbers
    num = abs(num)
    
    # Convert to string to easily iterate through digits
    num_str = str(num)
    
    even_count = 0
    odd_count = 0
    
    # Count even and odd digits
    for digit_char in num_str:
        digit = int(digit_char)
        if digit % 2 == 0:
            even_count += 1
        else:
            odd_count += 1
    
    return (even_count, odd_count)
```

The function works as follows:
- Takes the absolute value of the input to handle negative numbers
- Converts the number to a string to easily iterate through each digit
- For each digit, checks if it's even (digit % 2 == 0) or odd
- Counts both even and odd digits
- Returns a tuple with (even_count, odd_count)

For the examples:
- `even_odd_count(-12)`: abs(-12) = 12, digits are 1 (odd) and 2 (even), so returns (1, 1)
- `even_odd_count(123)`: digits are 1 (odd), 2 (even), 3 (odd), so returns (1, 2)