=============== SYSTEM ===============
You are an expert programmer specializing in translating Python tests to the Dafny verification language. Your task is to translate Python `assert` statements into Dafny test methods and provide a minimal dummy implementation for compilation checking.



=============== USER ===============
I need you to translate Python test assertions into Dafny test methods.

**The Method to Test:**
The Dafny method you need to test is named `remove_vowels`.

**Python Test Code:**
```python


METADATA = {}


def check(candidate):
    assert candidate('') == ''
    assert candidate("abcdef\nghijklm") == 'bcdf\nghjklm'
    assert candidate('fedcba') == 'fdcb'
    assert candidate('eeeee') == ''
    assert candidate('acBAA') == 'cB'
    assert candidate('EcBOO') == 'cB'
    assert candidate('ybcd') == 'ybcd'


```

**Dafny Solution Code (that these tests should test):**
```dafny
method remove_vowels(text: string) returns (result: string)
    ensures forall i :: 0 <= i < |result| ==> result[i] !in "aeiouAEIOU"
    ensures |result| <= |text|
{
    var vowels := "aeiouAEIOU";
    result := "";
    var i := 0;
    
    while i < |text|
        invariant 0 <= i <= |text|
        invariant forall j :: 0 <= j < |result| ==> result[j] !in vowels
        invariant |result| <= i
        decreases |text| - i
    {
        if text[i] !in vowels {
            result := result + [text[i]];
        }
        i := i + 1;
    }
}
```

**Your Task:**
1. **Analyze the tests and solution:**
   - Note the exact name (`remove_vowels`) and signature of the Dafny method from the provided solution code.

2. **Create a minimal dummy implementation** (in a `<dummy>` block):
   - Create a dummy version of the `remove_vowels` Dafny method.
   - The dummy should have the same signature as the method in the full Dafny solution and return appropriate default values (0 for int, false for bool, [] for sequences, etc.).
   - This dummy is ONLY for validating that the test code compiles correctly.

3. **Translate the tests** (in a ```dafny ... ``` block):
   - For each `assert` statement in the Python code, create a Dafny test method with `{:test}` attribute.
   - **All generated test methods must have a complete body and be runnable.**
   - Name them `test_0`, `test_1`, etc.
   - Convert scientific notation (e.g., 1e-6) to decimal form (e.g., 0.000001).
   - Each test method should:
     a. Call the `remove_vowels` Dafny method and assign the result to a variable.
     b. Use `expect` to check if the result matches the expected value.

**Example:** If Python has `assert add(2, 3) == 5`, the method to test is `add`, and the Dafny solution has `function add(a: int, b: int): int`, then:
<dummy>
function add(a: int, b: int): int
{
    0
}
</dummy>

```dafny
method {:test} test_0()
{
    var result := add(2, 3);
    expect result == 5;
}
```



=============== ASSISTANT ===============
--- THINKING ---
Let me analyze the Python test code and the Dafny solution code:

1. The Dafny method is `remove_vowels` and has signature:
   `method remove_vowels(text: string) returns (result: string)`

2. The Python tests are:
   - `candidate('') == ''`
   - `candidate("abcdef\nghijklm") == 'bcdf\nghjklm'`
   - `candidate('fedcba') == 'fdcb'`
   - `candidate('eeeee') == ''`
   - `candidate('acBAA') == 'cB'`
   - `candidate('EcBOO') == 'cB'`
   - `candidate('ybcd') == 'ybcd'`

So I need to:
1. Create a dummy implementation of `remove_vowels` method that returns an empty string by default
2. Translate each test assertion into a Dafny test method

For the dummy implementation, I need to match the signature: `method remove_vowels(text: string) returns (result: string)`
The default value for a string would be an empty string `""`.

For the tests, I need to convert each Python assert into a Dafny test method that calls `remove_vowels` and uses `expect` to verify the result.

Let me write this out:

--- RESPONSE ---
<dummy>
method remove_vowels(text: string) returns (result: string)
{
    result := "";
}
</dummy>

```dafny
method {:test} test_0()
{
    var result := remove_vowels("");
    expect result == "";
}

method {:test} test_1()
{
    var result := remove_vowels("abcdef\nghijklm");
    expect result == "bcdf\nghjklm";
}

method {:test} test_2()
{
    var result := remove_vowels("fedcba");
    expect result == "fdcb";
}

method {:test} test_3()
{
    var result := remove_vowels("eeeee");
    expect result == "";
}

method {:test} test_4()
{
    var result := remove_vowels("acBAA");
    expect result == "cB";
}

method {:test} test_5()
{
    var result := remove_vowels("EcBOO");
    expect result == "cB";
}

method {:test} test_6()
{
    var result := remove_vowels("ybcd");
    expect result == "ybcd";
}
```

