======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======


def same_chars(s0: str, s1: str):
    """
    Check if two words have the same characters.
    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc')
    True
    >>> same_chars('abcd', 'dddddddabc')
    True
    >>> same_chars('dddddddabc', 'abcd')
    True
    >>> same_chars('eabcd', 'dddddddabc')
    False
    >>> same_chars('abcd', 'dddddddabce')
    False
    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')
    False
    """


======MODEL OUTPUT======
Looking at the function signature and examples, I need to implement a function that checks if two strings contain exactly the same set of unique characters (regardless of their frequency or order).

Let me analyze the examples:
- `'eabcdzzzz'` and `'dddzzzzzzzddeddabc'` both contain the same unique characters: {e, a, b, c, d, z}
- `'abcd'` and `'dddddddabc'` both contain: {a, b, c, d}
- `'eabcd'` and `'dddddddabc'` differ because the first has 'e' but the second doesn't
- `'abcd'` and `'dddddddabce'` differ because the second has 'e' but the first doesn't

```python
def same_chars(s0: str, s1: str):
    """
    Check if two words have the same characters.
    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc')
    True
    >>> same_chars('abcd', 'dddddddabc')
    True
    >>> same_chars('dddddddabc', 'abcd')
    True
    >>> same_chars('eabcd', 'dddddddabc')
    False
    >>> same_chars('abcd', 'dddddddabce')
    False
    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')
    False
    """
    return set(s0) == set(s1)
```

The solution converts both strings to sets, which automatically removes duplicates and keeps only unique characters. Then it compares the two sets for equality. If they contain exactly the same characters, the function returns `True`; otherwise, it returns `False`.