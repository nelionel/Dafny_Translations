======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======


def common(l1: list, l2: list):
    """Return sorted unique common elements for two lists.
    >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])
    [1, 5, 653]
    >>> common([5, 3, 2, 8], [3, 2])
    [2, 3]

    """


======MODEL OUTPUT======
Looking at this function, I need to:

1. Find elements that appear in both lists
2. Remove duplicates 
3. Return them in sorted order

Here's the implementation:

```python
def common(l1: list, l2: list):
    """Return sorted unique common elements for two lists.
    >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])
    [1, 5, 653]
    >>> common([5, 3, 2, 8], [3, 2])
    [2, 3]

    """
    # Convert lists to sets to find intersection (common elements)
    # This automatically removes duplicates
    common_elements = set(l1) & set(l2)
    
    # Convert back to list and sort
    return sorted(list(common_elements))
```

The solution works by:
1. Converting both input lists to sets using `set(l1)` and `set(l2)` - this removes duplicates within each list
2. Using the set intersection operator `&` to find elements that exist in both sets
3. Converting the result back to a list and sorting it with `sorted()`

This efficiently handles the requirements of finding unique common elements and returning them in sorted order.