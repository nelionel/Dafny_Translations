======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======

def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''


======MODEL OUTPUT======
Looking at this problem, I need to:

1. Count the frequency of each integer in the list
2. Find integers where the frequency is greater than or equal to the value itself
3. Return the greatest such integer, or -1 if none exists

Let me trace through the examples:
- `[4, 1, 2, 2, 3, 1]`: frequencies are {4:1, 1:2, 2:2, 3:1}
  - 4 appears 1 time, 1 ≥ 4? No
  - 1 appears 2 times, 2 ≥ 1? Yes
  - 2 appears 2 times, 2 ≥ 2? Yes  
  - 3 appears 1 time, 1 ≥ 3? No
  - Valid numbers: [1, 2], greatest is 2

- `[1, 2, 2, 3, 3, 3, 4, 4, 4]`: frequencies are {1:1, 2:2, 3:3, 4:3}
  - 1 appears 1 time, 1 ≥ 1? Yes
  - 2 appears 2 times, 2 ≥ 2? Yes
  - 3 appears 3 times, 3 ≥ 3? Yes
  - 4 appears 3 times, 3 ≥ 4? No
  - Valid numbers: [1, 2, 3], greatest is 3

```python
def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''
    # Count frequency of each number
    frequency = {}
    for num in lst:
        frequency[num] = frequency.get(num, 0) + 1
    
    # Find numbers where frequency >= value
    valid_numbers = []
    for num, freq in frequency.items():
        if freq >= num:
            valid_numbers.append(num)
    
    # Return the greatest valid number, or -1 if none exist
    if valid_numbers:
        return max(valid_numbers)
    else:
        return -1
```