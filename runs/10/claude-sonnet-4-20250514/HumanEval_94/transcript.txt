======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======


def skjkasdkd(lst):
    """You are given a list of integers.
    You need to find the largest prime value and return the sum of its digits.

    Examples:
    For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should be 10
    For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output should be 25
    For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3] the output should be 13
    For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the output should be 11
    For lst = [0,81,12,3,1,21] the output should be 3
    For lst = [0,8,1,2,1,7] the output should be 7
    """


======MODEL OUTPUT======
Looking at this problem, I need to:

1. Find all prime numbers in the given list
2. Identify the largest prime number
3. Calculate the sum of digits of that largest prime
4. Return the sum

Let me break this down:
- First, I need a helper function to check if a number is prime
- Then, I need to find the largest prime in the list
- Finally, I need to sum the digits of that prime number

```python
def skjkasdkd(lst):
    """You are given a list of integers.
    You need to find the largest prime value and return the sum of its digits.

    Examples:
    For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should be 10
    For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output should be 25
    For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3] the output should be 13
    For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the output should be 11
    For lst = [0,81,12,3,1,21] the output should be 3
    For lst = [0,8,1,2,1,7] the output should be 7
    """
    
    def is_prime(n):
        """Check if a number is prime"""
        if n < 2:
            return False
        if n == 2:
            return True
        if n % 2 == 0:
            return False
        
        # Check odd divisors up to sqrt(n)
        for i in range(3, int(n**0.5) + 1, 2):
            if n % i == 0:
                return False
        return True
    
    def sum_of_digits(n):
        """Calculate the sum of digits of a number"""
        return sum(int(digit) for digit in str(n))
    
    # Find all prime numbers in the list
    primes = [num for num in lst if is_prime(num)]
    
    # If no primes found, return 0 (though this case isn't specified in examples)
    if not primes:
        return 0
    
    # Find the largest prime
    largest_prime = max(primes)
    
    # Return the sum of digits of the largest prime
    return sum_of_digits(largest_prime)
```

Let me verify this with the examples:

1. `[0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]` → largest prime is 181 → 1+8+1 = 10 ✓
2. `[1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]` → largest prime is 4597 → 4+5+9+7 = 25 ✓
3. `[1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]` → largest prime is 5107 → 5+1+0+7 = 13 ✓
4. `[0,724,32,71,99,32,6,0,5,91,83,0,5,6]` → largest prime is 83 → 8+3 = 11 ✓
5. `[0,81,12,3,1,21]` → largest prime is 3 → 3 = 3 ✓
6. `[0,8,1,2,1,7]` → largest prime is 7 → 7 = 7 ✓

The solution works correctly for all test cases!