======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======

def exchange(lst1, lst2):
    """In this problem, you will implement a function that takes two lists of numbers,
    and determines whether it is possible to perform an exchange of elements
    between them to make lst1 a list of only even numbers.
    There is no limit on the number of exchanged elements between lst1 and lst2.
    If it is possible to exchange elements between the lst1 and lst2 to make
    all the elements of lst1 to be even, return "YES".
    Otherwise, return "NO".
    For example:
    exchange([1, 2, 3, 4], [1, 2, 3, 4]) => "YES"
    exchange([1, 2, 3, 4], [1, 5, 3, 4]) => "NO"
    It is assumed that the input lists will be non-empty.
    """


======THINKING======


======MODEL OUTPUT======
Looking at this problem, I need to determine if I can exchange elements between two lists to make the first list contain only even numbers.

Let me think through the logic:
1. I need to make `lst1` contain only even numbers
2. I can exchange any number of elements between `lst1` and `lst2`
3. The key insight is that I need enough even numbers total across both lists to fill `lst1`

So the solution is:
- Count all even numbers in both lists combined
- If the total count of even numbers is at least equal to the length of `lst1`, then it's possible to make `lst1` all even
- Otherwise, it's impossible

```python
def exchange(lst1, lst2):
    """In this problem, you will implement a function that takes two lists of numbers,
    and determines whether it is possible to perform an exchange of elements
    between them to make lst1 a list of only even numbers.
    There is no limit on the number of exchanged elements between lst1 and lst2.
    If it is possible to exchange elements between the lst1 and lst2 to make
    all the elements of lst1 to be even, return "YES".
    Otherwise, return "NO".
    For example:
    exchange([1, 2, 3, 4], [1, 2, 3, 4]) => "YES"
    exchange([1, 2, 3, 4], [1, 5, 3, 4]) => "NO"
    It is assumed that the input lists will be non-empty.
    """
    # Count even numbers in both lists
    even_count = 0
    
    # Count even numbers in lst1
    for num in lst1:
        if num % 2 == 0:
            even_count += 1
    
    # Count even numbers in lst2
    for num in lst2:
        if num % 2 == 0:
            even_count += 1
    
    # Check if we have enough even numbers to fill lst1
    if even_count >= len(lst1):
        return "YES"
    else:
        return "NO"
```

The algorithm works as follows:
1. Count all even numbers across both lists
2. If the total count of even numbers is greater than or equal to the length of `lst1`, we can exchange elements to make `lst1` contain only even numbers
3. Return "YES" if possible, "NO" otherwise

For the examples:
- `exchange([1, 2, 3, 4], [1, 2, 3, 4])`: We have 4 even numbers total (2, 4, 2, 4) and need 4 for lst1, so "YES"
- `exchange([1, 2, 3, 4], [1, 5, 3, 4])`: We have 3 even numbers total (2, 4, 4) but need 4 for lst1, so "NO"