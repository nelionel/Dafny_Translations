======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======

def split_words(txt):
    '''
    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you
    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the
    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25
    Examples
    split_words("Hello world!") ➞ ["Hello", "world!"]
    split_words("Hello,world!") ➞ ["Hello", "world!"]
    split_words("abcdef") == 3 
    '''


======THINKING======


======MODEL OUTPUT======
Looking at this problem, I need to implement a function that:

1. First tries to split on whitespace
2. If no whitespace, tries to split on commas
3. If neither, counts lowercase letters with odd positions in the alphabet

Let me trace through the examples:
- "Hello world!" has whitespace → split on whitespace
- "Hello,world!" has no whitespace but has comma → split on comma
- "abcdef" has neither → count lowercase letters at odd alphabet positions

For the alphabet positions: a=0, b=1, c=2, d=3, e=4, f=5
Odd positions are: b(1), d(3), f(5) → count = 3

```python
def split_words(txt):
    '''
    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you
    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the
    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25
    Examples
    split_words("Hello world!") ➞ ["Hello", "world!"]
    split_words("Hello,world!") ➞ ["Hello", "world!"]
    split_words("abcdef") == 3 
    '''
    # Check if there are any whitespaces
    if ' ' in txt:
        return txt.split()
    
    # Check if there are any commas
    elif ',' in txt:
        return txt.split(',')
    
    # Count lowercase letters with odd positions in alphabet
    else:
        count = 0
        for char in txt:
            if char.islower():
                # Calculate position in alphabet (a=0, b=1, etc.)
                position = ord(char) - ord('a')
                # Check if position is odd
                if position % 2 == 1:
                    count += 1
        return count
```