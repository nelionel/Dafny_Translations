======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======

def prod_signs(arr):
    """
    You are given an array arr of integers and you need to return
    sum of magnitudes of integers multiplied by product of all signs
    of each number in the array, represented by 1, -1 or 0.
    Note: return None for empty arr.

    Example:
    >>> prod_signs([1, 2, 2, -4]) == -9
    >>> prod_signs([0, 1]) == 0
    >>> prod_signs([]) == None
    """


======THINKING======


======MODEL OUTPUT======
Looking at this problem, I need to:

1. Return `None` for empty arrays
2. Calculate the sum of magnitudes (absolute values) of all integers
3. Calculate the product of signs (1 for positive, -1 for negative, 0 for zero)
4. Return the product of these two values

Let me trace through the examples:
- `[1, 2, 2, -4]`: magnitudes = 1+2+2+4 = 9, signs = 1×1×1×(-1) = -1, result = 9×(-1) = -9
- `[0, 1]`: magnitudes = 0+1 = 1, signs = 0×1 = 0, result = 1×0 = 0
- `[]`: empty array, return None

```python
def prod_signs(arr):
    """
    You are given an array arr of integers and you need to return
    sum of magnitudes of integers multiplied by product of all signs
    of each number in the array, represented by 1, -1 or 0.
    Note: return None for empty arr.

    Example:
    >>> prod_signs([1, 2, 2, -4]) == -9
    >>> prod_signs([0, 1]) == 0
    >>> prod_signs([]) == None
    """
    if not arr:
        return None
    
    sum_magnitudes = sum(abs(num) for num in arr)
    
    product_signs = 1
    for num in arr:
        if num > 0:
            product_signs *= 1
        elif num < 0:
            product_signs *= -1
        else:  # num == 0
            product_signs *= 0
    
    return sum_magnitudes * product_signs
```