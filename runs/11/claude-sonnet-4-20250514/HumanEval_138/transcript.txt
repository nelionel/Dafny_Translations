======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======

def is_equal_to_sum_even(n):
    """Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers
    Example
    is_equal_to_sum_even(4) == False
    is_equal_to_sum_even(6) == False
    is_equal_to_sum_even(8) == True
    """


======THINKING======


======MODEL OUTPUT======
Looking at this problem, I need to determine if a number `n` can be written as the sum of exactly 4 positive even numbers.

Let me think about this step by step:

1. The smallest positive even number is 2
2. So the smallest possible sum of 4 positive even numbers would be 2 + 2 + 2 + 2 = 8
3. Any number less than 8 cannot be written as such a sum
4. For numbers ≥ 8, I need to check if they can be expressed as a sum of 4 positive even numbers

Since every positive even number can be written as 2k where k is a positive integer, the sum of 4 positive even numbers would be:
2a + 2b + 2c + 2d = 2(a + b + c + d)

This means `n` must be even, and n/2 must be expressible as the sum of 4 positive integers.

The smallest sum of 4 positive integers is 1+1+1+1 = 4, so n/2 ≥ 4, which means n ≥ 8.

For any integer m ≥ 4, we can write m as the sum of 4 positive integers:
- If m = 4: 1+1+1+1
- If m = 5: 2+1+1+1
- If m = 6: 2+2+1+1
- And so on...

So any even number ≥ 8 can be written as the sum of exactly 4 positive even numbers.

```python
def is_equal_to_sum_even(n):
    """Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers
    Example
    is_equal_to_sum_even(4) == False
    is_equal_to_sum_even(6) == False
    is_equal_to_sum_even(8) == True
    """
    # A number can be written as sum of 4 positive even numbers if and only if:
    # 1. It's even (since sum of even numbers is even)
    # 2. It's at least 8 (since minimum sum is 2+2+2+2=8)
    
    return n % 2 == 0 and n >= 8
```

The logic is:
- `n % 2 == 0`: checks if n is even
- `n >= 8`: checks if n is at least 8 (the minimum possible sum)

This matches the examples:
- `is_equal_to_sum_even(4)` returns `False` (4 < 8)
- `is_equal_to_sum_even(6)` returns `False` (6 < 8) 
- `is_equal_to_sum_even(8)` returns `True` (8 is even and ≥ 8)