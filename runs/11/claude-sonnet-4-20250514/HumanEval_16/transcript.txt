======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======


def count_distinct_characters(string: str) -> int:
    """ Given a string, find out how many distinct characters (regardless of case) does it consist of
    >>> count_distinct_characters('xyzXYZ')
    3
    >>> count_distinct_characters('Jerry')
    4
    """


======THINKING======


======MODEL OUTPUT======
Looking at this problem, I need to:

1. Count distinct characters in a string regardless of case
2. Convert the string to a consistent case (upper or lower) to handle case-insensitivity
3. Use a set to automatically handle uniqueness
4. Return the count

Let me trace through the examples:
- `'xyzXYZ'` → convert to lowercase → `'xyzxyz'` → unique chars: `{'x', 'y', 'z'}` → count = 3
- `'Jerry'` → convert to lowercase → `'jerry'` → unique chars: `{'j', 'e', 'r', 'y'}` → count = 4

```python
def count_distinct_characters(string: str) -> int:
    """ Given a string, find out how many distinct characters (regardless of case) does it consist of
    >>> count_distinct_characters('xyzXYZ')
    3
    >>> count_distinct_characters('Jerry')
    4
    """
    # Convert to lowercase to handle case-insensitivity, then use set to get unique characters
    return len(set(string.lower()))
```

The solution works by:
1. Converting the input string to lowercase using `string.lower()` to make the comparison case-insensitive
2. Converting the lowercase string to a `set`, which automatically removes duplicates
3. Returning the length of the set, which gives us the count of distinct characters

This handles all edge cases including empty strings (would return 0) and strings with mixed case characters.