======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======
from typing import List


def sort_numbers(numbers: str) -> str:
    """ Input is a space-delimited string of numberals from 'zero' to 'nine'.
    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.
    Return the string with numbers sorted from smallest to largest
    >>> sort_numbers('three one five')
    'one three five'
    """


======THINKING======


======MODEL OUTPUT======
Looking at this problem, I need to:

1. Parse a space-delimited string of number words
2. Convert them to their numeric values for sorting
3. Sort them from smallest to largest
4. Convert back to number words and return as a space-delimited string

Here's my implementation:

```python
from typing import List


def sort_numbers(numbers: str) -> str:
    """ Input is a space-delimited string of numberals from 'zero' to 'nine'.
    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.
    Return the string with numbers sorted from smallest to largest
    >>> sort_numbers('three one five')
    'one three five'
    """
    # Handle empty string
    if not numbers.strip():
        return ""
    
    # Mapping from word to number
    word_to_num = {
        'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4,
        'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9
    }
    
    # Mapping from number to word
    num_to_word = {
        0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four',
        5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine'
    }
    
    # Split the input string into individual words
    words = numbers.split()
    
    # Convert words to numbers, sort them, then convert back to words
    sorted_words = [num_to_word[word_to_num[word]] for word in sorted(words, key=lambda x: word_to_num[x])]
    
    # Join the sorted words back into a string
    return ' '.join(sorted_words)
```

The solution works by:

1. Creating mappings between number words and their numeric values
2. Splitting the input string into individual words
3. Sorting the words based on their numeric values using a lambda function as the key
4. Converting the sorted numeric values back to words
5. Joining them back into a space-delimited string

The algorithm handles edge cases like empty strings and maintains the original format of the output.