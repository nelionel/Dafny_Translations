======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======


def encode_cyclic(s: str):
    """
    returns encoded string by cycling groups of three characters.
    """
    # split string to groups. Each of length 3.
    groups = [s[(3 * i):min((3 * i + 3), len(s))] for i in range((len(s) + 2) // 3)]
    # cycle elements in each group. Unless group has fewer elements than 3.
    groups = [(group[1:] + group[0]) if len(group) == 3 else group for group in groups]
    return "".join(groups)


def decode_cyclic(s: str):
    """
    takes as input string encoded with encode_cyclic function. Returns decoded string.
    """


======THINKING======


======MODEL OUTPUT======
Looking at the `encode_cyclic` function, I can see that it:
1. Splits the string into groups of 3 characters
2. For each group of exactly 3 characters, it cycles them by moving the first character to the end
3. Groups with fewer than 3 characters remain unchanged

To decode this, I need to reverse the cycling operation. If encoding moves the first character to the end, then decoding should move the last character to the beginning.

```python
def decode_cyclic(s: str):
    """
    takes as input string encoded with encode_cyclic function. Returns decoded string.
    """
    # split string to groups. Each of length 3.
    groups = [s[(3 * i):min((3 * i + 3), len(s))] for i in range((len(s) + 2) // 3)]
    # reverse cycle elements in each group. Unless group has fewer elements than 3.
    groups = [(group[-1] + group[:-1]) if len(group) == 3 else group for group in groups]
    return "".join(groups)
```

The key difference is in the cycling logic:
- `encode_cyclic` uses `group[1:] + group[0]` (moves first char to end)
- `decode_cyclic` uses `group[-1] + group[:-1]` (moves last char to beginning)

This reverses the encoding operation and restores the original string.