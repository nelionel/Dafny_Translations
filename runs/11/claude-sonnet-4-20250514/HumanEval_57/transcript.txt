======SYSTEM PROMPT======
You are a Python coding assistant. Your task is to write a Python script with the full implementation of the function described in the user prompt. The implementation should be inside a markdown code block.

======USER PROMPT======


def monotonic(l: list):
    """Return True is list elements are monotonically increasing or decreasing.
    >>> monotonic([1, 2, 4, 20])
    True
    >>> monotonic([1, 20, 4, 10])
    False
    >>> monotonic([4, 1, 0, -10])
    True
    """


======THINKING======


======MODEL OUTPUT======
Looking at the function signature and examples, I need to implement a function that checks if a list is monotonically increasing or monotonically decreasing.

Let me analyze the examples:
- `[1, 2, 4, 20]` - monotonically increasing → True
- `[1, 20, 4, 10]` - neither increasing nor decreasing → False  
- `[4, 1, 0, -10]` - monotonically decreasing → True

Here's the implementation:

```python
def monotonic(l: list):
    """Return True is list elements are monotonically increasing or decreasing.
    >>> monotonic([1, 2, 4, 20])
    True
    >>> monotonic([1, 20, 4, 10])
    False
    >>> monotonic([4, 1, 0, -10])
    True
    """
    if len(l) <= 1:
        return True
    
    # Check if monotonically increasing
    increasing = all(l[i] <= l[i + 1] for i in range(len(l) - 1))
    
    # Check if monotonically decreasing
    decreasing = all(l[i] >= l[i + 1] for i in range(len(l) - 1))
    
    return increasing or decreasing
```

The function works by:
1. Handling edge cases (empty list or single element list)
2. Checking if the list is monotonically increasing by comparing each element with the next
3. Checking if the list is monotonically decreasing by comparing each element with the next
4. Returning True if either condition is met

Note: I used `<=` and `>=` to allow for equal consecutive elements, which is typically considered monotonic. If you need strictly increasing/decreasing, you would use `<` and `>` instead.